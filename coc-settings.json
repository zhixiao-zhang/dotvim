{
  "workspace.rootPatterns": [
    ".git",
    ".hg",
    ".projections.json",
    ".root"
  ],
  "suggest.noselect": true,
  "suggest.enablePreselect": false,
  "suggest.detailField": "preview",
  "diagnostic.errorSign": "\uf467",
  "diagnostic.warningSign": "\uf071",
  "diagnostic.infoSign": "\uf129",
  "diagnostic.hintSign": "\uf864",
  "diagnostic.refreshOnInsertMode": false,
  "diagnostic.checkCurrentLine": true,
  "diagnostic.virtualText": false,
  "diagnostic.enableMessage": "always",
  "clangd.disableDiagnostics": true,
  "snippets.ultisnips.enable": true,
  "snippets.ultisnips.directories": [
    "UltiSnips",
    "$HOME/.vim/plugged/vim-snippets/UltiSnips",
    "$HOME/.vim//UltiSnips"
  ],
  "clangd.arguments": [
    "--background-index",
    "--clang-tidy",
    "--clang-tidy-checks=performance-*,bugprone-*",
    "--all-scopes-completion",
    "--completion-style=detailed",
    "--header-insertion=iwyu",
    "--pch-storage=disk",
    "--compile-commands-dir=${workspaceFolder}/.compile_info"
  ],
  "signature.enable": true,
  "snippets.ultisnips.pythonPrompt": false,
  "colors.enable": true,
  "semanticTokens.enable": true,
  "inlayHint.enable": true,
  "codeLens.enable": true,
  "languageserver": {
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": [
        "--lsp"
      ],
      "rootPatterns": [
        "*.cabal",
        "stack.yaml",
        "cabal.project",
        "package.yaml",
        "hie.yaml"
      ],
      "filetypes": [
        "haskell",
        "lhaskell"
      ],
      "settings": {
        "haskell": {
          "checkParents": "CheckOnSave",
          "checkProject": true,
          "maxCompletions": 40,
          "formattingProvider": "ormolu",
          "plugin": {
            "stan": {
              "globalOn": true
            },
            "semanticTokens": {
              "globalOn": true
            },
            "hlint": {
              "globalOn": true
            },
            "ghcide-type-lenses": {
              "globalOn": true
            }
          }
        }
      }
    }
  }
}
